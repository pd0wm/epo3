-- Generated by: xvhdl 2.49 31-Jul-2008
-- Date: 28-Nov-13 19:02:00
-- Path: /home/epo3-user/Documents/CheckMask/test

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
LIBRARY CellsLib;
USE CellsLib.CellsLib_DECL_PACK.all;

-- user directives added from .sls2vhdl


ARCHITECTURE extracted OF Check_mask IS

  SIGNAL n44: STD_LOGIC;
  SIGNAL n42: STD_LOGIC;
  SIGNAL n45: STD_LOGIC;
  SIGNAL next_state_2_port: STD_LOGIC;
  SIGNAL n39: STD_LOGIC;
  SIGNAL n40: STD_LOGIC;
  SIGNAL n58: STD_LOGIC;
  SIGNAL n14: STD_LOGIC;
  SIGNAL n49: STD_LOGIC;
  SIGNAL n13: STD_LOGIC;
  SIGNAL n15: STD_LOGIC;
  SIGNAL n59: STD_LOGIC;
  SIGNAL n12: STD_LOGIC;
  SIGNAL n36: STD_LOGIC;
  SIGNAL n8: STD_LOGIC;
  SIGNAL n9: STD_LOGIC;
  SIGNAL n35: STD_LOGIC;
  SIGNAL n61: STD_LOGIC;
  SIGNAL pixel_0_port: STD_LOGIC;
  SIGNAL n53: STD_LOGIC;
  SIGNAL n7: STD_LOGIC;
  SIGNAL n6: STD_LOGIC;
  SIGNAL n5: STD_LOGIC;
  SIGNAL pixel_1_port: STD_LOGIC;
  SIGNAL n54: STD_LOGIC;
  SIGNAL n62: STD_LOGIC;
  SIGNAL next_state_0_port: STD_LOGIC;
  SIGNAL n47: STD_LOGIC;
  SIGNAL n60: STD_LOGIC;
  SIGNAL n56: STD_LOGIC;
  SIGNAL n55: STD_LOGIC;
  SIGNAL n51: STD_LOGIC;
  SIGNAL n48: STD_LOGIC;
  SIGNAL state_2_port: STD_LOGIC;
  SIGNAL state_0_port: STD_LOGIC;
  SIGNAL n52: STD_LOGIC;
  SIGNAL n46: STD_LOGIC;
  SIGNAL n50: STD_LOGIC;
  SIGNAL next_state_1_port: STD_LOGIC;
  SIGNAL n63: STD_LOGIC;
  SIGNAL n57: STD_LOGIC;
  SIGNAL n37: STD_LOGIC;
  SIGNAL n38: STD_LOGIC;
  SIGNAL n43: STD_LOGIC;
  SIGNAL n41: STD_LOGIC;
  SIGNAL state_1_port: STD_LOGIC;

  SIGNAL mask_select_int: STD_LOGIC_VECTOR(1 DOWNTO 0);
  SIGNAL ready_int: STD_LOGIC;
  SIGNAL empty_int: STD_LOGIC;
  SIGNAL write_int: STD_LOGIC;
  SIGNAL addr_int: STD_LOGIC_VECTOR(7 DOWNTO 0);

  SIGNAL vss: STD_LOGIC;
  SIGNAL vdd: STD_LOGIC;
BEGIN
  vdd <= '1';
  vss <= '0';

  mask_select <= mask_select_int;
  ready <= ready_int;
  empty <= empty_int;
  write <= write_int;
  addr <= addr_int;

  write_int <= vss;

  U71: iv110 PORT MAP (mask(0), n45);
  U72: iv110 PORT MAP (mask(1), n44);
  U74: iv110 PORT MAP (mask(3), n42);
  U76: iv110 PORT MAP (mask(5), n40);
  U77: iv110 PORT MAP (mask(6), n39);
  U95: iv110 PORT MAP (pixel_0_port, n12);
  U67: iv110 PORT MAP (n15, n59);
  U88: iv110 PORT MAP (state_0_port, n53);
  U83: iv110 PORT MAP (n60, n35);
  U90: iv110 PORT MAP (pixel_1_port, n8);
  U69: iv110 PORT MAP (n54, n7);
  U87: iv110 PORT MAP (state_1_port, n52);
  U81: iv110 PORT MAP (state_2_port, n46);
  U65: iv110 PORT MAP (start, n57);
  U79: iv110 PORT MAP (mask(7), n37);
  U73: iv110 PORT MAP (mask(2), n43);
  U75: iv110 PORT MAP (mask(4), n41);
  addr_tri_1_inst: tinv10 PORT MAP (n38, n44, addr_int(1));
  addr_tri_0_inst: tinv10 PORT MAP (n38, n45, addr_int(0));
  addr_tri_3_inst: tinv10 PORT MAP (n38, n42, addr_int(3));
  addr_tri_5_inst: tinv10 PORT MAP (n38, n40, addr_int(5));
  addr_tri_6_inst: tinv10 PORT MAP (n38, n39, addr_int(6));
  empty_tri: tinv10 PORT MAP (n36, n35, empty_int);
  data_tri: tinv10 PORT MAP (vss, vdd, data);
  addr_tri_7_inst: tinv10 PORT MAP (n38, n37, addr_int(7));
  addr_tri_2_inst: tinv10 PORT MAP (n38, n43, addr_int(2));
  addr_tri_4_inst: tinv10 PORT MAP (n38, n41, addr_int(4));
  state_reg_2_inst: dfr11 PORT MAP (next_state_2_port, rst, clk, state_2_port);
  state_reg_0_inst: dfr11 PORT MAP (next_state_0_port, rst, clk, state_0_port);
  state_reg_1_inst: dfr11 PORT MAP (next_state_1_port, rst, clk, state_1_port);
  U57: na210 PORT MAP (n48, n49, next_state_2_port);
  U11: na210 PORT MAP (pixel_0_port, n15, n13);
  U96: na210 PORT MAP (n14, n13, pixel_0_port);
  U10: na210 PORT MAP (n7, n12, n14);
  U68: na210 PORT MAP (state_2_port, n12, n58);
  U66: na210 PORT MAP (n58, n59, n9);
  U91: na210 PORT MAP (n6, n5, pixel_1_port);
  U6: na210 PORT MAP (pixel_1_port, n9, n5);
  U86: na210 PORT MAP (data, state_2_port, n62);
  U62: na210 PORT MAP (n54, n55, next_state_0_port);
  U64: na210 PORT MAP (n57, n52, n56);
  U63: na210 PORT MAP (n50, n56, n55);
  U85: na310 PORT MAP (n53, n52, n62, n15);
  U58: na310 PORT MAP (pixel_0_port, pixel_1_port, n7, n49);
  U70: na310 PORT MAP (n60, n53, state_2_port, n54);
  U5: na310 PORT MAP (n7, n8, pixel_0_port, n6);
  U59: na310 PORT MAP (state_0_port, n46, state_1_port, n48);
  U82: no210 PORT MAP (state_0_port, n35, n61);
  U80: no210 PORT MAP (n61, n46, n36);
  U61: no210 PORT MAP (state_2_port, n53, n51);
  U89: no210 PORT MAP (n8, n63, mask_select_int(1));
  U92: no210 PORT MAP (n12, n63, mask_select_int(0));
  U84: no210 PORT MAP (state_1_port, data, n60);
  U56: no210 PORT MAP (data, state_0_port, n47);
  U78: no210 PORT MAP (n50, n52, n38);
  U94: no210 PORT MAP (state_0_port, state_2_port, n50);
  U55: no310 PORT MAP (n46, state_1_port, n47, ready_int);
  U60: mu111 PORT MAP (n50, n51, n52, next_state_1_port);
  U93: mu111 PORT MAP (n50, state_2_port, state_1_port, n63);

END extracted;



