-- Generated by: xvhdl 2.49 31-Jul-2008
-- Date: 3-Dec-13 19:09:40
-- Path: /home/epo3-user/Desktop/epo3/CheckMask/test

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
LIBRARY CellsLib;
USE CellsLib.CellsLib_DECL_PACK.all;

-- user directives added from .sls2vhdl


ARCHITECTURE extracted OF Check_mask IS

  SIGNAL n50: STD_LOGIC;
  SIGNAL n47: STD_LOGIC;
  SIGNAL n91: STD_LOGIC;
  SIGNAL n49: STD_LOGIC;
  SIGNAL n92: STD_LOGIC;
  SIGNAL state_0_port: STD_LOGIC;
  SIGNAL state_2_port: STD_LOGIC;
  SIGNAL state_1_port: STD_LOGIC;
  SIGNAL n71: STD_LOGIC;
  SIGNAL next_state_1_port: STD_LOGIC;
  SIGNAL n86: STD_LOGIC;
  SIGNAL n70: STD_LOGIC;
  SIGNAL n87: STD_LOGIC;
  SIGNAL n77: STD_LOGIC;
  SIGNAL n74: STD_LOGIC;
  SIGNAL n69: STD_LOGIC;
  SIGNAL n78: STD_LOGIC;
  SIGNAL n72: STD_LOGIC;
  SIGNAL n76: STD_LOGIC;
  SIGNAL next_state_0_port: STD_LOGIC;
  SIGNAL n52: STD_LOGIC;
  SIGNAL n68: STD_LOGIC;
  SIGNAL n75: STD_LOGIC;
  SIGNAL n73: STD_LOGIC;
  SIGNAL n60: STD_LOGIC;
  SIGNAL n57: STD_LOGIC;
  SIGNAL next_state_2_port: STD_LOGIC;
  SIGNAL n90: STD_LOGIC;
  SIGNAL n65: STD_LOGIC;
  SIGNAL n63: STD_LOGIC;
  SIGNAL n64: STD_LOGIC;
  SIGNAL n62: STD_LOGIC;
  SIGNAL n58: STD_LOGIC;
  SIGNAL n59: STD_LOGIC;
  SIGNAL n67: STD_LOGIC;
  SIGNAL n48: STD_LOGIC;
  SIGNAL n51: STD_LOGIC;
  SIGNAL n82: STD_LOGIC;
  SIGNAL n55: STD_LOGIC;
  SIGNAL n84: STD_LOGIC;
  SIGNAL n45: STD_LOGIC;
  SIGNAL n85: STD_LOGIC;
  SIGNAL n83: STD_LOGIC;
  SIGNAL n81: STD_LOGIC;
  SIGNAL n46: STD_LOGIC;
  SIGNAL n80: STD_LOGIC;
  SIGNAL n66: STD_LOGIC;
  SIGNAL n79: STD_LOGIC;
  SIGNAL n53: STD_LOGIC;
  SIGNAL n56: STD_LOGIC;
  SIGNAL n89: STD_LOGIC;
  SIGNAL n54: STD_LOGIC;
  SIGNAL n61: STD_LOGIC;
  SIGNAL n88: STD_LOGIC;

  SIGNAL mask_select_int: STD_LOGIC_VECTOR(1 DOWNTO 0);
  SIGNAL ready_int: STD_LOGIC;
  SIGNAL empty_int: STD_LOGIC;
  SIGNAL lut_start_int: STD_LOGIC;
  SIGNAL write_int: STD_LOGIC;
  SIGNAL addr_int: STD_LOGIC_VECTOR(7 DOWNTO 0);

  SIGNAL vss: STD_LOGIC;
BEGIN
  vss <= '0';

  mask_select <= mask_select_int;
  ready <= ready_int;
  empty <= empty_int;
  lut_start <= lut_start_int;
  write <= write_int;
  addr <= addr_int;

  write_int <= vss;

  U96: no210 PORT MAP (data_in, n61, n88);
  U85: no210 PORT MAP (mask_select_int(1), n80, n84);
  U68: no210 PORT MAP (n57, n65, n64);
  U93: no210 PORT MAP (n90, rst, n89);
  U67: no210 PORT MAP (n63, n64, n62);
  U70: no210 PORT MAP (n66, n67, n63);
  U112: no210 PORT MAP (n78, state_2_port, n68);
  U115: no210 PORT MAP (n73, state_2_port, n87);
  U108: no210 PORT MAP (state_0_port, state_2_port, n91);
  U107: no210 PORT MAP (n91, n78, n46);
  U92: mu111 PORT MAP (empty_int, n88, n89, n54);
  U80: mu111 PORT MAP (n79, n80, mask_select_int(0), n56);
  U84: mu111 PORT MAP (mask_select_int(1), n84, mask_select_int(0), n83);
  empty_s_reg: dfn10 PORT MAP (n54, clk, empty_int);
  pixel_reg_0_inst: dfn10 PORT MAP (n56, clk, mask_select_int(0));
  pixel_reg_1_inst: dfn10 PORT MAP (n55, clk, mask_select_int(1));
  U81: no310 PORT MAP (n80, data_in, n66, n79);
  U89: no310 PORT MAP (lut_start_int, rst, n86, n85);
  addr_tri_0_inst: tinv10 PORT MAP (n46, n53, addr_int(0));
  addr_tri_7_inst: tinv10 PORT MAP (n46, n45, addr_int(7));
  addr_tri_5_inst: tinv10 PORT MAP (n46, n48, addr_int(5));
  addr_tri_2_inst: tinv10 PORT MAP (n46, n51, addr_int(2));
  addr_tri_1_inst: tinv10 PORT MAP (n46, n52, addr_int(1));
  addr_tri_4_inst: tinv10 PORT MAP (n46, n49, addr_int(4));
  addr_tri_3_inst: tinv10 PORT MAP (n46, n50, addr_int(3));
  addr_tri_6_inst: tinv10 PORT MAP (n46, n47, addr_int(6));
  U100: iv110 PORT MAP (mask(0), n53);
  U109: iv110 PORT MAP (mask(7), n45);
  U88: iv110 PORT MAP (n85, n80);
  U98: iv110 PORT MAP (n66, n59);
  U86: iv110 PORT MAP (data_in, n67);
  U105: iv110 PORT MAP (mask(5), n48);
  U102: iv110 PORT MAP (mask(2), n51);
  U69: iv110 PORT MAP (start, n65);
  U94: iv110 PORT MAP (n57, n90);
  U101: iv110 PORT MAP (mask(1), n52);
  U91: iv110 PORT MAP (n87, n77);
  U74: iv110 PORT MAP (n69, n72);
  U116: iv110 PORT MAP (state_0_port, n73);
  U114: iv110 PORT MAP (state_1_port, n78);
  U104: iv110 PORT MAP (mask(4), n49);
  U103: iv110 PORT MAP (mask(3), n50);
  U106: iv110 PORT MAP (mask(6), n47);
  U82: na210 PORT MAP (n81, n82, n55);
  U87: na210 PORT MAP (mask_select_int(1), n80, n81);
  U65: na210 PORT MAP (data_in, n59, n58);
  U64: na210 PORT MAP (n57, n58, ready_int);
  U72: na210 PORT MAP (n70, n71, next_state_1_port);
  U90: na210 PORT MAP (n57, n77, n86);
  U113: na210 PORT MAP (n87, n78, n70);
  U73: na210 PORT MAP (n72, n68, n71);
  U75: na210 PORT MAP (n73, n74, n69);
  U76: na210 PORT MAP (lut_ready, lut_error, n74);
  U110: na210 PORT MAP (n70, n92, lut_start_int);
  U71: na210 PORT MAP (n68, n69, n60);
  U111: na210 PORT MAP (n68, n73, n92);
  U83: na310 PORT MAP (n59, n67, n83, n82);
  U66: na310 PORT MAP (n60, n61, n62, next_state_2_port);
  U97: na310 PORT MAP (mask_select_int(0), n59, mask_select_int(1), n61);
  U77: na310 PORT MAP (n75, n66, n76, next_state_0_port);
  U79: na310 PORT MAP (lut_ready, n73, n68, n75);
  U78: na310 PORT MAP (n77, n78, start, n76);
  U95: na310 PORT MAP (state_2_port, n78, state_0_port, n57);
  U99: na310 PORT MAP (n73, n78, state_2_port, n66);
  state_reg_1_inst: dfr11 PORT MAP (next_state_1_port, rst, clk, state_1_port);
  state_reg_2_inst: dfr11 PORT MAP (next_state_2_port, rst, clk, state_2_port);
  state_reg_0_inst: dfr11 PORT MAP (next_state_0_port, rst, clk, state_0_port);

END extracted;



